// <auto-generated />
using System;
using FarmFresh.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FarmFresh.Api.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230727074814_factories")]
    partial class factories
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FarmFresh.Api.Entities.CoalPowerPlant", b =>
                {
                    b.Property<int>("PlantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlantId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Production")
                        .HasColumnType("float");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PlantId");

                    b.HasIndex("UserId");

                    b.ToTable("CoalPowerPlant");
                });

            modelBuilder.Entity("FarmFresh.Api.Entities.OrganicFertilizerFactory", b =>
                {
                    b.Property<int>("FactoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FactoryId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<double>("PowerUsage")
                        .HasColumnType("float");

                    b.Property<int>("Production")
                        .HasColumnType("int");

                    b.HasKey("FactoryId");

                    b.ToTable("OrganicFertilizerFactory");
                });

            modelBuilder.Entity("FarmFresh.Api.Entities.OrganicSeedsFactory", b =>
                {
                    b.Property<int>("FactoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FactoryId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<double>("PowerUsage")
                        .HasColumnType("float");

                    b.Property<int>("Production")
                        .HasColumnType("int");

                    b.HasKey("FactoryId");

                    b.ToTable("OrganicSeedsFactory");
                });

            modelBuilder.Entity("FarmFresh.Api.Entities.PestAndDiseaseFactory", b =>
                {
                    b.Property<int>("FactoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FactoryId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<double>("PowerUsage")
                        .HasColumnType("float");

                    b.Property<int>("Production")
                        .HasColumnType("int");

                    b.HasKey("FactoryId");

                    b.ToTable("PestAndDiseaseFactory");
                });

            modelBuilder.Entity("FarmFresh.Api.Entities.SoilAmendmentsFactory", b =>
                {
                    b.Property<int>("FactoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FactoryId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<double>("PowerUsage")
                        .HasColumnType("float");

                    b.Property<int>("Production")
                        .HasColumnType("int");

                    b.HasKey("FactoryId");

                    b.ToTable("SoilAmendmentsFactory");
                });

            modelBuilder.Entity("FarmFresh.Api.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganicFertilizerFactoryFactoryId")
                        .HasColumnType("int");

                    b.Property<int>("OrganicSeedsFactoryFactoryId")
                        .HasColumnType("int");

                    b.Property<int>("PestAndDiseaseFactoryFactoryId")
                        .HasColumnType("int");

                    b.Property<int>("SoilAmendmentsFactoryFactoryId")
                        .HasColumnType("int");

                    b.Property<string>("UserUUID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("OrganicFertilizerFactoryFactoryId");

                    b.HasIndex("OrganicSeedsFactoryFactoryId");

                    b.HasIndex("PestAndDiseaseFactoryFactoryId");

                    b.HasIndex("SoilAmendmentsFactoryFactoryId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("FarmFresh.Api.Entities.CoalPowerPlant", b =>
                {
                    b.HasOne("FarmFresh.Api.Entities.User", null)
                        .WithMany("CoalPowerPlants")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("FarmFresh.Api.Entities.User", b =>
                {
                    b.HasOne("FarmFresh.Api.Entities.OrganicFertilizerFactory", "OrganicFertilizerFactory")
                        .WithMany()
                        .HasForeignKey("OrganicFertilizerFactoryFactoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FarmFresh.Api.Entities.OrganicSeedsFactory", "OrganicSeedsFactory")
                        .WithMany()
                        .HasForeignKey("OrganicSeedsFactoryFactoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FarmFresh.Api.Entities.PestAndDiseaseFactory", "PestAndDiseaseFactory")
                        .WithMany()
                        .HasForeignKey("PestAndDiseaseFactoryFactoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FarmFresh.Api.Entities.SoilAmendmentsFactory", "SoilAmendmentsFactory")
                        .WithMany()
                        .HasForeignKey("SoilAmendmentsFactoryFactoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrganicFertilizerFactory");

                    b.Navigation("OrganicSeedsFactory");

                    b.Navigation("PestAndDiseaseFactory");

                    b.Navigation("SoilAmendmentsFactory");
                });

            modelBuilder.Entity("FarmFresh.Api.Entities.User", b =>
                {
                    b.Navigation("CoalPowerPlants");
                });
#pragma warning restore 612, 618
        }
    }
}
